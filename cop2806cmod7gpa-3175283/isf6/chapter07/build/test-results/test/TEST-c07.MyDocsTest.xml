<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="c07.MyDocsTest" tests="3" skipped="0" failures="0" errors="0" timestamp="2023-06-30T12:11:54" hostname="DESKTOP-V3QDITO" time="0.185">
  <properties/>
  <testcase name="testEngineNonNull" classname="c07.MyDocsTest" time="0.004"/>
  <testcase name="testFindByType" classname="c07.MyDocsTest" time="0.156"/>
  <testcase name="testListAll" classname="c07.MyDocsTest" time="0.019"/>
  <system-out><![CDATA[08:11:52.167 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@7fe7c640 testClass = MyDocsTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c4748bf testClass = MyDocsTest, locations = '{}', classes = '{class c07.MyDocsConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@8c3619e, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@5bf8fa12, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@f4d7ecae, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@33308786, [ImportsContextCustomizer@7ce97ee5 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.test.context.TestExecutionListeners(inheritListeners=true, listeners={}, mergeMode=REPLACE_DEFAULTS, value={org.springframework.test.context.web.ServletTestExecutionListener.class, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener.class, org.springframework.test.context.event.ApplicationEventsTestExecutionListener.class, org.springframework.test.context.support.DependencyInjectionTestExecutionListener.class, org.springframework.test.context.support.DirtiesContextTestExecutionListener.class, org.springframework.test.context.event.EventPublishingTestExecutionListener.class}), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(exclude={}, excludeName={}), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters({org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.database", skip=NO), @org.springframework.context.annotation.Import({org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar.class}), @org.springframework.context.annotation.Import({org.springframework.boot.autoconfigure.AutoConfigurationImportSelector.class}), @org.springframework.test.context.BootstrapWith(org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper.class), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(bootstrapMode=DEFAULT, excludeFilters={}, useDefaultFilters=true, excludeAutoConfiguration={}, showSql=true, includeFilters={}, properties={}), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.ContextConfiguration(inheritInitializers=true, loader=org.springframework.test.context.ContextLoader.class, initializers={}, classes={c07.MyDocsConfiguration.class}, name="", locations={}, value={}, inheritLocations=true), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(basePackages={}, basePackageClasses={}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, timeoutString="", transactionManager="", isolation=DEFAULT, label={}, noRollbackForClassName={}, noRollbackFor={}, value="", timeout=-1, rollbackFor={}), @org.springframework.context.annotation.Import({org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class})]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1b835480, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@6fb365ed, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
08:11:52.170 [Test worker] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@7fe7c640 testClass = MyDocsTest, testInstance = c07.MyDocsTest@674bd420, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c4748bf testClass = MyDocsTest, locations = '{}', classes = '{class c07.MyDocsConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@8c3619e, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@5bf8fa12, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@f4d7ecae, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@33308786, [ImportsContextCustomizer@7ce97ee5 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.test.context.TestExecutionListeners(inheritListeners=true, listeners={}, mergeMode=REPLACE_DEFAULTS, value={org.springframework.test.context.web.ServletTestExecutionListener.class, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener.class, org.springframework.test.context.event.ApplicationEventsTestExecutionListener.class, org.springframework.test.context.support.DependencyInjectionTestExecutionListener.class, org.springframework.test.context.support.DirtiesContextTestExecutionListener.class, org.springframework.test.context.event.EventPublishingTestExecutionListener.class}), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(exclude={}, excludeName={}), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters({org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.database", skip=NO), @org.springframework.context.annotation.Import({org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar.class}), @org.springframework.context.annotation.Import({org.springframework.boot.autoconfigure.AutoConfigurationImportSelector.class}), @org.springframework.test.context.BootstrapWith(org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper.class), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(bootstrapMode=DEFAULT, excludeFilters={}, useDefaultFilters=true, excludeAutoConfiguration={}, showSql=true, includeFilters={}, properties={}), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.ContextConfiguration(inheritInitializers=true, loader=org.springframework.test.context.ContextLoader.class, initializers={}, classes={c07.MyDocsConfiguration.class}, name="", locations={}, value={}, inheritLocations=true), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(basePackages={}, basePackageClasses={}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, timeoutString="", transactionManager="", isolation=DEFAULT, label={}, noRollbackForClassName={}, noRollbackFor={}, value="", timeout=-1, rollbackFor={}), @org.springframework.context.annotation.Import({org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class})]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1b835480, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@6fb365ed, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::             (v3.0.0-M3)

2023-06-30T08:11:52.500-04:00  INFO 186816 --- [    Test worker] c07.MyDocsTest                           : Starting MyDocsTest using Java 17.0.7 on DESKTOP-V3QDITO with PID 186816 (C:\Users\willi\Downloads\cop2806cmod7gpa-3175283\isf6\chapter07\build\classes\java\test started by willi in C:\Users\willi\Downloads\cop2806cmod7gpa-3175283\isf6\chapter07)
2023-06-30T08:11:52.501-04:00  INFO 186816 --- [    Test worker] c07.MyDocsTest                           : No active profile set, falling back to 1 default profile: "default"
2023-06-30T08:11:52.740-04:00  INFO 186816 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-30T08:11:52.786-04:00  INFO 186816 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 39 ms. Found 1 JPA repository interfaces.
2023-06-30T08:11:52.867-04:00  INFO 186816 --- [    Test worker] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2023-06-30T08:11:53.018-04:00  INFO 186816 --- [    Test worker] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:fc1a9711-a4b1-42ea-b951-6fdcbcd17ede;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2023-06-30T08:11:53.350-04:00  INFO 186816 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-06-30T08:11:53.406-04:00  INFO 186816 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.9.Final
2023-06-30T08:11:53.573-04:00  INFO 186816 --- [    Test worker] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-06-30T08:11:53.712-04:00  INFO 186816 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: drop table if exists document CASCADE 
Hibernate: create table document (id integer not null, location varchar(255) not null, name varchar(255) not null, type varchar(255) not null, primary key (id))
2023-06-30T08:11:54.227-04:00  INFO 186816 --- [    Test worker] o.h.t.schema.internal.SchemaCreatorImpl  : HHH000476: Executing import script 'file:/C:/Users/willi/Downloads/cop2806cmod7gpa-3175283/isf6/chapter07/build/resources/main/import.sql'
Hibernate: insert into document (id, name, type, location) values (         1,         'Book Template',         'PDF',         '/Docs/Template.pdf'        )
Hibernate: insert into document (id, name, type, location) values (            2,            'Apress Home Page',            'URL',            'https://apress.com'        )
Hibernate: insert into document (id, name, type, location) values (            3,            'Chapter Template',            'DOC',            '/Docs/Chapter Sample.doc'        )
Hibernate: insert into document (id, name, type, location) values (            4,            'chapter 1',            'DOCX',            '/Book/Chapter 01.docx'        )
2023-06-30T08:11:54.248-04:00  INFO 186816 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-06-30T08:11:54.256-04:00  INFO 186816 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-30T08:11:54.606-04:00  INFO 186816 --- [    Test worker] c07.MyDocsTest                           : Started MyDocsTest in 2.398 seconds (process running for 3.323)
Hibernate: select document0_.id as id1_0_, document0_.location as location2_0_, document0_.name as name3_0_, document0_.type as type4_0_ from document document0_ where document0_.type=?
Hibernate: select document0_.id as id1_0_, document0_.location as location2_0_, document0_.name as name3_0_, document0_.type as type4_0_ from document document0_
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
